name: Render WakaTime PNG (nightly)

on:
  schedule:
    - cron: '0 3 * * *'    # 03:00 UTC daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  render:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci || npm install

      - name: Render WakaTime PNG
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: node ./scripts/render_waka_png.js

      # <-- ADD THE COMMIT STEP HERE (last step of job) -->
      - name: Commit assets if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage only the generated image(s)
          git add wakatime.png streak.svg || true

          # If nothing staged, exit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          # Commit staged changes
          git commit -m "chore: update generated assets"

          # Fetch remote and rebase safely by stashing any local unstaged/untracked changes
          git fetch origin main

          # Create a stash of any remaining unstaged/untracked changes (if any)
          git stash push --include-untracked -m "gh-actions/pre-pull-stash" || true

          # Rebase on top of remote main
          git pull --rebase origin main

          # Try to pop the stash (may fail cleanly if nothing to pop)
          git stash pop || true

          # Push the new commit (if remote advanced during rebase this will fail; runner will show it)
          git push origin main
      
