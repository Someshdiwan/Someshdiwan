name: Render WakaTime SVG (nightly)

on:
  schedule:
    - cron: '0 3 * * *'       # 03:00 UTC (08:30 IST). For 03:00 IST use: 30 21 * * *
  workflow_dispatch:

concurrency:
  group: render-waka-svg
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  render:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Kolkata
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Small random jitter (API friendly)
        run: sleep $(( RANDOM % 90 ))

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci || npm install

      - name: Render WakaTime SVG
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          WAKATIME_USERNAME: ${{ secrets.WAKATIME_USERNAME }} # optional
        run: node ./scripts/render_waka_svg.js

      - name: Generate streak.svg (optional)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node ./scripts/generate_streak.js || echo "streak generator failed"

      - name: Sanitize generated SVGs
        run: node .github/sanitize_svg.js wakatime.svg streak.svg || true

      - name: Commit & push if changed (amend bot-only)
        shell: bash
        run: |
          set -euo pipefail

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage only our managed files (png is optional if you produce it)
          git add -N wakatime.svg streak.svg wakatime.png 2>/dev/null || true
          if git diff --quiet -- wakatime.svg streak.svg wakatime.png; then
            echo "No changes to commit"
            exit 0
          fi

          git add wakatime.svg streak.svg wakatime.png 2>/dev/null || true

          # Rebase on latest main (handles parallel edits), stash just in case
          git fetch origin main
          git stash push --include-untracked -m "gha/stash" || true
          git pull --rebase origin main || true
          git stash pop || true || true

          # If last commit is our bot and only touched our files, amend it
          LAST_AUTHOR="$(git log -1 --pretty=format:'%an <%ae>')"
          ONLY_OURS="false"
          MODS="$(git show --name-only --pretty='' HEAD 2>/dev/null || true)"
          if [[ "$LAST_AUTHOR" == "github-actions[bot] <github-actions[bot]@users.noreply.github.com>" ]]; then
            BAD="no"
            for f in $MODS; do
              case "$f" in
                wakatime.svg|streak.svg|wakatime.png) ;;
                *) BAD="yes"; break;;
              esac
            done
            [[ "$BAD" == "no" ]] && ONLY_OURS="true"
          fi

          if [[ "$ONLY_OURS" == "true" ]]; then
            git commit --amend --no-edit || true
            git push --force-with-lease origin main
            echo "Amended previous bot commit."
          else
            git commit -m "chore: update generated assets"
            git push origin main
            echo "Pushed new bot commit."
          fi